// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it renders a save button if the task has not been saved by the user 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskSaveControls
    saveTask={[Function]}
    task={
        Object {
            "id": 123,
            "parent": Object {
              "id": 321,
            },
            "status": 1,
          }
    }
    unsaveTask={[Function]}
    user={
        Object {
            "id": 357,
            "isLoggedIn": true,
            "savedTasks": Array [],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <p
          className="control"
>
          <button
                    className="button is-small is-outlined save-task-toggle save-task"
                    onClick={[Function]}
          >
                    <FormattedMessage
                              defaultMessage="Save for Later"
                              id="Task.controls.save.label"
                              values={Object {}}
                    />
          </button>
</p>,
        null,
      ],
      "className": "task-save-controls",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="button is-small is-outlined save-task-toggle save-task"
            onClick={[Function]}
>
            <FormattedMessage
                        defaultMessage="Save for Later"
                        id="Task.controls.save.label"
                        values={Object {}}
            />
</button>,
          "className": "control",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <FormattedMessage
              defaultMessage="Save for Later"
              id="Task.controls.save.label"
              values={Object {}}
/>,
            "className": "button is-small is-outlined save-task-toggle save-task",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultMessage": "Save for Later",
              "id": "Task.controls.save.label",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "button",
        },
        "type": "p",
      },
      null,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <p
            className="control"
>
            <button
                        className="button is-small is-outlined save-task-toggle save-task"
                        onClick={[Function]}
            >
                        <FormattedMessage
                                    defaultMessage="Save for Later"
                                    id="Task.controls.save.label"
                                    values={Object {}}
                        />
            </button>
</p>,
          null,
        ],
        "className": "task-save-controls",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="button is-small is-outlined save-task-toggle save-task"
              onClick={[Function]}
>
              <FormattedMessage
                            defaultMessage="Save for Later"
                            id="Task.controls.save.label"
                            values={Object {}}
              />
</button>,
            "className": "control",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <FormattedMessage
                defaultMessage="Save for Later"
                id="Task.controls.save.label"
                values={Object {}}
/>,
              "className": "button is-small is-outlined save-task-toggle save-task",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultMessage": "Save for Later",
                "id": "Task.controls.save.label",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "button",
          },
          "type": "p",
        },
        null,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`it renders an unsave button if the task has already been saved by the user 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskSaveControls
    saveTask={[Function]}
    task={
        Object {
            "id": 123,
            "parent": Object {
              "id": 321,
            },
            "status": 1,
          }
    }
    unsaveTask={[Function]}
    user={
        Object {
            "id": 357,
            "isLoggedIn": true,
            "savedTasks": Array [
              Object {
                "id": 123,
              },
            ],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        null,
        <p
          className="control"
>
          <button
                    className="button is-small is-outlined save-task-toggle unsave-task"
                    onClick={[Function]}
          >
                    <FormattedMessage
                              defaultMessage="Unsave"
                              id="Task.controls.unsave.label"
                              values={Object {}}
                    />
          </button>
</p>,
      ],
      "className": "task-save-controls",
    },
    "ref": null,
    "rendered": Array [
      null,
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <button
            className="button is-small is-outlined save-task-toggle unsave-task"
            onClick={[Function]}
>
            <FormattedMessage
                        defaultMessage="Unsave"
                        id="Task.controls.unsave.label"
                        values={Object {}}
            />
</button>,
          "className": "control",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <FormattedMessage
              defaultMessage="Unsave"
              id="Task.controls.unsave.label"
              values={Object {}}
/>,
            "className": "button is-small is-outlined save-task-toggle unsave-task",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultMessage": "Unsave",
              "id": "Task.controls.unsave.label",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "button",
        },
        "type": "p",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          null,
          <p
            className="control"
>
            <button
                        className="button is-small is-outlined save-task-toggle unsave-task"
                        onClick={[Function]}
            >
                        <FormattedMessage
                                    defaultMessage="Unsave"
                                    id="Task.controls.unsave.label"
                                    values={Object {}}
                        />
            </button>
</p>,
        ],
        "className": "task-save-controls",
      },
      "ref": null,
      "rendered": Array [
        null,
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="button is-small is-outlined save-task-toggle unsave-task"
              onClick={[Function]}
>
              <FormattedMessage
                            defaultMessage="Unsave"
                            id="Task.controls.unsave.label"
                            values={Object {}}
              />
</button>,
            "className": "control",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <FormattedMessage
                defaultMessage="Unsave"
                id="Task.controls.unsave.label"
                values={Object {}}
/>,
              "className": "button is-small is-outlined save-task-toggle unsave-task",
              "onClick": [Function],
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "defaultMessage": "Unsave",
                "id": "Task.controls.unsave.label",
                "values": Object {},
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": "button",
          },
          "type": "p",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
