// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`shows false positive control 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <TaskFalsePositiveControl
    activateKeyboardShortcut={[Function]}
    complete={[Function]}
    deactivateKeyboardShortcut={[Function]}
    intl={
        Object {
            "formatMessage": [Function],
          }
    }
    isMinimized={false}
    keyboardShortcutGroups={
        Object {
            "openEditor": Object {
              "editId": Object {
                "key": "e",
                "label": "Edit in Id",
              },
              "editJosm": Object {
                "key": "r",
                "label": "Edit in JOSM",
              },
              "editJosmLayer": Object {
                "key": "t",
                "label": "Edit in new JOSM layer",
              },
            },
            "taskCompletion": Object {
              "falsePositive": Object {
                "key": "q",
                "label": "Not an Issue",
              },
              "skip": Object {
                "key": "w",
                "label": "Skip",
              },
            },
            "taskEditing": Object {
              "cancel": Object {
                "key": "Escape",
                "keyLabel": "ESC",
                "label": "Cancel Editing",
              },
            },
            "taskReview": Object {
              "nextTask": Object {
                "key": "l",
                "label": "Next Task",
              },
              "prevTask": Object {
                "key": "h",
                "label": "Previous Task",
              },
            },
          }
    }
    task={
        Object {
            "id": 123,
            "parent": Object {
              "id": 321,
            },
            "status": 0,
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <span
          className="control-icon"
          title="Not an Issue"
>
          <SvgSymbol
                    sym="check-icon"
                    viewBox="0 0 20 20"
          />
</span>,
        <span
          className="control-label"
>
          <FormattedMessage
                    defaultMessage="Not an Issue"
                    id="Task.controls.falsePositive.label"
                    values={Object {}}
          />
</span>,
      ],
      "className": "button false-positive-control large-and-wide",
      "onClick": [Function],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <SvgSymbol
            sym="check-icon"
            viewBox="0 0 20 20"
/>,
          "className": "control-icon",
          "title": "Not an Issue",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "sym": "check-icon",
            "viewBox": "0 0 20 20",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "span",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <FormattedMessage
            defaultMessage="Not an Issue"
            id="Task.controls.falsePositive.label"
            values={Object {}}
/>,
          "className": "control-label",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "defaultMessage": "Not an Issue",
            "id": "Task.controls.falsePositive.label",
            "values": Object {},
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": "span",
      },
    ],
    "type": "button",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <span
            className="control-icon"
            title="Not an Issue"
>
            <SvgSymbol
                        sym="check-icon"
                        viewBox="0 0 20 20"
            />
</span>,
          <span
            className="control-label"
>
            <FormattedMessage
                        defaultMessage="Not an Issue"
                        id="Task.controls.falsePositive.label"
                        values={Object {}}
            />
</span>,
        ],
        "className": "button false-positive-control large-and-wide",
        "onClick": [Function],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <SvgSymbol
              sym="check-icon"
              viewBox="0 0 20 20"
/>,
            "className": "control-icon",
            "title": "Not an Issue",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "sym": "check-icon",
              "viewBox": "0 0 20 20",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "span",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <FormattedMessage
              defaultMessage="Not an Issue"
              id="Task.controls.falsePositive.label"
              values={Object {}}
/>,
            "className": "control-label",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "defaultMessage": "Not an Issue",
              "id": "Task.controls.falsePositive.label",
              "values": Object {},
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": "span",
        },
      ],
      "type": "button",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
