// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`it renders with props as expected 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <FilterByLocation
    asMenuList={false}
    challenges={
        Array [
            Object {
              "blurb": "Challenge 309 blurb",
              "description": "Challenge 309 description",
              "id": 309,
              "name": "Challenge 309",
              "parent": Object {
                "displayName": "foo",
              },
            },
            Object {
              "blurb": "Challenge 311 blurb",
              "description": "Challenge 311 description",
              "id": 311,
              "name": "Challenge 311",
              "parent": Object {
                "displayName": "bar",
              },
            },
          ]
    }
    intl={
        Object {
            "formatMessage": [Function],
          }
    }
    locateMapToUser={[Function]}
    mapBounds={
        Object {
            "challenges": Object {
              "bounds": 1,
            },
          }
    }
    removeSearchFilters={[Function]}
    searchFilters={
        Object {
            "difficulty": 1,
          }
    }
    setSearchFilters={[Function]}
    user={
        Object {
            "id": 11,
            "savedChallenges": Array [],
          }
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "eventTypes": Array [
        "mousedown",
        "touchstart",
      ],
      "excludeScrollbar": false,
      "label": <FormattedMessage
        defaultMessage="Location"
        id="ChallengeFilterSubnav.filter.location.label"
        values={Object {}}
/>,
      "onChange": [Function],
      "options": Array [
        Object {
          "key": "any",
          "text": "Anywhere",
          "value": undefined,
        },
        Object {
          "key": "withinMapBounds",
          "text": "Within Map Bounds",
          "value": "withinMapBounds",
        },
        Object {
          "key": "intersectingMapBounds",
          "text": "Intersecting Map Bounds",
          "value": "intersectingMapBounds",
        },
        Object {
          "key": "nearMe",
          "text": "Near Me",
          "value": "nearMe",
        },
      ],
      "outsideClickIgnoreClass": "ignore-react-onclickoutside",
      "placeholder": "Anywhere",
      "preventDefault": false,
      "stopPropagation": false,
      "value": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "eventTypes": Array [
          "mousedown",
          "touchstart",
        ],
        "excludeScrollbar": false,
        "label": <FormattedMessage
          defaultMessage="Location"
          id="ChallengeFilterSubnav.filter.location.label"
          values={Object {}}
/>,
        "onChange": [Function],
        "options": Array [
          Object {
            "key": "any",
            "text": "Anywhere",
            "value": undefined,
          },
          Object {
            "key": "withinMapBounds",
            "text": "Within Map Bounds",
            "value": "withinMapBounds",
          },
          Object {
            "key": "intersectingMapBounds",
            "text": "Intersecting Map Bounds",
            "value": "intersectingMapBounds",
          },
          Object {
            "key": "nearMe",
            "text": "Near Me",
            "value": "nearMe",
          },
        ],
        "outsideClickIgnoreClass": "ignore-react-onclickoutside",
        "placeholder": "Anywhere",
        "preventDefault": false,
        "stopPropagation": false,
        "value": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
